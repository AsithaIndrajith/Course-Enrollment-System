/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import static Controller.CourseController.searchCourseByCourseName;
import static Controller.CourseController.searchCourseByDepartmentIDandDegreeID;
import static Controller.StudentSubjectController.deleteStudentSubject;
import static Controller.StudentSubjectController.insertStudentSubject;
import static Controller.SubjectController.search4SubjectsByCourseIDAndYearAndSemester;
import static Controller.SubjectController.searchOther4SubjectsByCourseIDAndYearAndSemester;
import static Controller.UndergraduateController.deleteUndergraduate;
import Model.Course;
import Model.Mailer;
import static Model.Season.eligibleFebruarySeason;
import static Model.Season.eligibleJulySeason;
import Model.StudentSubject;
import Model.Subject;
import static View.EnrollementSystemHome.depid;
import static View.EnrollementSystemHome.hm;
import static View.UndergraduateLogin.un;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asitha
 */
public class UndergraduateCourseRegister extends javax.swing.JFrame {
    private static ArrayList<Subject>coreSub;
    private static ArrayList<Subject>otherSub;
    private static int count=0;
    private DefaultTableModel dtm;
    
    
    /**
     * Creates new form UndergraduateCourseRegister
     */
    public UndergraduateCourseRegister() {
        coreSub=new ArrayList<>();
        otherSub=new ArrayList<>();
        dtm=new DefaultTableModel();
        initComponents();
        this.loadCourse();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        CourseComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        nextBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        otherSub1ComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        otherSub2ComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        otherSub3ComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        selectYearComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        semesterComboBox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        addOptionalSubjectsBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        subTables = new javax.swing.JTable();
        totalPaymentLblName = new javax.swing.JLabel();
        totalPaymentLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Undergraduate Course Register");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        CourseComboBox.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        CourseComboBox.setPreferredSize(new java.awt.Dimension(50, 50));
        CourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseComboBoxActionPerformed(evt);
            }
        });

        nextBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        nextBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/next2.png"))); // NOI18N
        nextBtn.setText("Next");
        nextBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nextBtn.setPreferredSize(new java.awt.Dimension(1050, 50));
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        closeBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close5.png"))); // NOI18N
        closeBtn.setText("Close");
        closeBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        closeBtn.setPreferredSize(new java.awt.Dimension(50, 50));
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel2.setText("Select first subject");
        jLabel2.setPreferredSize(new java.awt.Dimension(50, 50));

        otherSub1ComboBox.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        otherSub1ComboBox.setPreferredSize(new java.awt.Dimension(50, 50));
        otherSub1ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherSub1ComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel6.setText("Select second subject");
        jLabel6.setPreferredSize(new java.awt.Dimension(50, 50));

        otherSub2ComboBox.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        otherSub2ComboBox.setPreferredSize(new java.awt.Dimension(50, 50));
        otherSub2ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherSub2ComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel7.setText("Select third subject");
        jLabel7.setPreferredSize(new java.awt.Dimension(50, 50));

        otherSub3ComboBox.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        otherSub3ComboBox.setPreferredSize(new java.awt.Dimension(50, 50));
        otherSub3ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherSub3ComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel5.setText("Select Course");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel8.setText("Select Year");

        selectYearComboBox.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        selectYearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel9.setText("Select Semester");

        semesterComboBox.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        semesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        jLabel14.setBackground(new java.awt.Color(0, 102, 204));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setOpaque(true);

        addOptionalSubjectsBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        addOptionalSubjectsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plus3.png"))); // NOI18N
        addOptionalSubjectsBtn.setText("Add Subjects");
        addOptionalSubjectsBtn.setHideActionText(true);
        addOptionalSubjectsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addOptionalSubjectsBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        addOptionalSubjectsBtn.setPreferredSize(new java.awt.Dimension(50, 50));
        addOptionalSubjectsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOptionalSubjectsBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/settings.png"))); // NOI18N
        jLabel10.setText("Undergraduate Course Register");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(666, 666, 666)
                                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(347, 347, 347)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(selectYearComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(semesterComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CourseComboBox, 0, 443, Short.MAX_VALUE))))
                        .addGap(531, 531, 531)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(273, 273, 273)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(otherSub1ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(otherSub2ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(otherSub3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nextBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addOptionalSubjectsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(otherSub1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otherSub2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otherSub3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addOptionalSubjectsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Undegraduate Course Register", jPanel1);

        subTables.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        subTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject ID", "Subject Name", "Semester", "Year", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(subTables);

        totalPaymentLblName.setText("Total Payment");

        totalPaymentLbl.setBackground(new java.awt.Color(255, 0, 0));
        totalPaymentLbl.setForeground(new java.awt.Color(255, 255, 255));
        totalPaymentLbl.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1195, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totalPaymentLblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalPaymentLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalPaymentLblName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPaymentLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Selected Subjects", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Get main 4 subjects
     */
    public static ArrayList<Subject> getCoreSub() {
        return coreSub;
    }

    /**
     * Set Main 4 subjects
     */
    public static void setCoreSub(ArrayList<Subject> aCoreSub) {
        coreSub = aCoreSub;
    }

    /**
     * Get optional subjects
     */
    public static ArrayList<Subject> getOtherSub() {
        return otherSub;
    }

    /**
     * Set optional subjects
     */
    public static void setOtherSub(ArrayList<Subject> aOtherSub) {
        otherSub = aOtherSub;
    }

    /**
     * Get how many times does data collected
     */
    public static int getCount() {
        return count;
    }

    /**
     * Set count of data have been collected about subjects
     */
    public static void setCount(int aCount) {
        count = aCount;
    }
    
        public javax.swing.JComboBox<String> getSelectSemester() {
        return semesterComboBox;
    }

    public void setSelectSemester(javax.swing.JComboBox<String> selectSemester) {
        this.semesterComboBox = selectSemester;
    }

    public javax.swing.JComboBox<String> getSelectCourse() {
        return CourseComboBox;
    }

    public void setSelectCourse(javax.swing.JComboBox<String> selectCourse) {
        this.CourseComboBox = selectCourse;
    }

    public javax.swing.JComboBox<String> getSelectYear() {
        return selectYearComboBox;
    }

    public void setSelectYear(javax.swing.JComboBox<String> selectYear) {
        this.selectYearComboBox = selectYear;
    }
    
    /**
     *Load available courses into combo box
     */
    public void loadCourse(){
        try {
            ArrayList<Course>courses=searchCourseByDepartmentIDandDegreeID(depid,"U");//Search all postgraduate courses with respect to department
            if(courses.size()>0){
                ArrayList<String>courseNames=new ArrayList<>();
                
                for(Course cs: courses){
                    courseNames.add(cs.getName());
                }
                
                String courseNamesStringArray[]= new String[courses.size()];
                courseNamesStringArray= courseNames.toArray(courseNamesStringArray);
                
                CourseComboBox.setModel(new DefaultComboBoxModel<>(courseNamesStringArray));
                
                if(eligibleJulySeason()){//If registration eligible for july it sets semester 2 by default
                    semesterComboBox.setSelectedIndex(1);
                    semesterComboBox.setEditable(false);
                    semesterComboBox.setEnabled(false);
                }
               
            }
            else{
                JOptionPane.showMessageDialog(rootPane,"There are no courses avaiable for you.");
                this.setVisible(false);
                hm.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PostgraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PostgraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        }catch(Exception e){
            System.out.println(e.toString());
        }
    }
    
    /**
     *Delete user and subject details
     */
    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        try {
            // If user click close delete the user from databse
            
            deleteUndergraduate(un);
            deleteStudentSubject(un.getId());
            
            this.dispose();
            hm.setVisible(true);
            hm.setLocationRelativeTo(null);
        } catch (SQLException ex) {        
            Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_closeBtnActionPerformed

    /**
     *Add subjects for user in to the database for a season
     */
    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        try {
            
            //Check whether course registraion is either july or february
            if(eligibleJulySeason()){
                
                //If july season make semester to 2 default and uneditable
                getSelectSemester().setSelectedIndex(1);
                getSelectSemester().setEditable(false);
                getSelectSemester().setEnabled(false);
                
                for(int i=0;i<coreSub.size();i++){
                    StudentSubject studentSubject=new StudentSubject();
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(coreSub.get(i).getSubjectID());
                                        
                    insertStudentSubject(studentSubject);
                }
                //Insert optional subject in to user database
                int sub1=otherSub1ComboBox.getSelectedIndex();
                int sub2=otherSub2ComboBox.getSelectedIndex();
                int sub3=otherSub3ComboBox.getSelectedIndex();

                StudentSubject studentSubject=new StudentSubject();
                
                studentSubject.setStudentID(un.getId());
                studentSubject.setSubjectID(otherSub.get(sub1).getSubjectID());
                insertStudentSubject(studentSubject);
                
                studentSubject.setStudentID(un.getId());
                studentSubject.setSubjectID(otherSub.get(sub2).getSubjectID());
                insertStudentSubject(studentSubject);
                
                studentSubject.setStudentID(un.getId());
                studentSubject.setSubjectID(otherSub.get(sub3).getSubjectID());
                insertStudentSubject(studentSubject);
                
                //Open a new login form
                this.dispose();
                UndergraduateLogin undergraduateLogin=new UndergraduateLogin();
                undergraduateLogin.setVisible(true);
                undergraduateLogin.setLocationRelativeTo(null);
                
            }
            else if(eligibleFebruarySeason()){
               
                if(count<1){
                    for(int i=0;i<coreSub.size();i++){
                        StudentSubject studentSubject=new StudentSubject();
                        studentSubject.setStudentID(un.getId());
                        studentSubject.setSubjectID(coreSub.get(i).getSubjectID());
                        
                        insertStudentSubject(studentSubject);
                        
                    }
                    int sub1=otherSub1ComboBox.getSelectedIndex();
                    int sub2=otherSub2ComboBox.getSelectedIndex();
                    int sub3=otherSub3ComboBox.getSelectedIndex();
                    
                    StudentSubject studentSubject=new StudentSubject();
                    
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(otherSub.get(sub1).getSubjectID());
                    insertStudentSubject(studentSubject);
                    
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(otherSub.get(sub2).getSubjectID());
                    insertStudentSubject(studentSubject);
                    
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(otherSub.get(sub3).getSubjectID());
                    insertStudentSubject(studentSubject);
                    
                    JOptionPane.showMessageDialog(rootPane, "Please select subjects for 2nd semester");
                    
                    getSelectSemester().setSelectedIndex(1);
                    getSelectYear().setSelectedIndex(getSelectYear().getSelectedIndex());
                    getSelectCourse().setSelectedIndex(getSelectCourse().getSelectedIndex());
                    
                    //Make year and course and semester feilds uneditable
                    getSelectCourse().setEditable(false);
                    getSelectCourse().setEnabled(false);
                    getSelectSemester().setEditable(false);
                    getSelectSemester().setEnabled(false);
                    getSelectYear().setEditable(false);
                    getSelectYear().setEnabled(false);
                    
                    //Increment count to calculate 2 times for submitting subjects for february and july season
                    count++;
                }
                else{
                    //When count is 1 it means that we have collected details once. So insert next subject details and end course registration here for february season
                    for(int i=0;i<coreSub.size();i++){
                        StudentSubject studentSubject=new StudentSubject();
                        studentSubject.setStudentID(un.getId());
                        studentSubject.setSubjectID(coreSub.get(i).getSubjectID());
                        
                        insertStudentSubject(studentSubject);
                    }
                    
                    int sub1=otherSub1ComboBox.getSelectedIndex();
                    int sub2=otherSub2ComboBox.getSelectedIndex();
                    int sub3=otherSub3ComboBox.getSelectedIndex();
                    
                    StudentSubject studentSubject=new StudentSubject();
                    
                    //Insert 3 optional subjects user chose in to databse
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(otherSub.get(sub1).getSubjectID());
                    insertStudentSubject(studentSubject);
                    
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(otherSub.get(sub2).getSubjectID());
                    insertStudentSubject(studentSubject);
                    
                    studentSubject.setStudentID(un.getId());
                    studentSubject.setSubjectID(otherSub.get(sub3).getSubjectID());
                    insertStudentSubject(studentSubject);
                    
                    //Open a new login form for the user
                    this.dispose();
                    UndergraduateLogin undergraduateLogin=new UndergraduateLogin();
                    undergraduateLogin.setVisible(true);
                    undergraduateLogin.setLocationRelativeTo(null);
                    
                }
                
            } 
        } catch (SQLException ex) {
            Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Try again later!!!");
        }
        
    }//GEN-LAST:event_nextBtnActionPerformed

    private void CourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseComboBoxActionPerformed
        
        try {
            String yr=(String)getSelectYear().getSelectedItem();
            String sem=(String)getSelectSemester().getSelectedItem();
            String cs=(String)getSelectCourse().getSelectedItem();
            String deg=searchCourseByCourseName(cs);
            
            setCoreSub(search4SubjectsByCourseIDAndYearAndSemester(deg,yr,sem));
            
            if(coreSub.size()>0){
                dtm=(DefaultTableModel) subTables.getModel();
                dtm.setRowCount(0);

                for (Subject sub : getCoreSub()) {
                    Object[] rowData = {sub.getSubjectID(), sub.getSubjectName(),sub.getSubjectSemester(),sub.getSubjectYear(),sub.getPrice()};
                    dtm.addRow(rowData);
                }

                setOtherSub(searchOther4SubjectsByCourseIDAndYearAndSemester(deg,yr,sem));
                String otherSubName[]=new String[4];

                for(int i=0;i<otherSub.size();i++){
                    otherSubName[i]=(String)(getOtherSub().get(i).getSubjectName());
                }

                otherSub1ComboBox.setModel(new DefaultComboBoxModel<>(otherSubName));
                otherSub2ComboBox.setModel(new DefaultComboBoxModel<>(otherSubName));
                otherSub3ComboBox.setModel(new DefaultComboBoxModel<>(otherSubName));

            }
            else{
                JOptionPane.showMessageDialog(rootPane, "There are no courses available for you.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_CourseComboBoxActionPerformed

    private void otherSub1ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherSub1ComboBoxActionPerformed
        // TODO add your handling code here:
        if((otherSub2ComboBox.getSelectedIndex()==otherSub1ComboBox.getSelectedIndex())||(otherSub3ComboBox.getSelectedIndex()==otherSub1ComboBox.getSelectedIndex())){
            JOptionPane.showMessageDialog(rootPane, "Please select three different courses");
        }
    }//GEN-LAST:event_otherSub1ComboBoxActionPerformed

    private void otherSub2ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherSub2ComboBoxActionPerformed
        // TODO add your handling code here:
        if((otherSub1ComboBox.getSelectedIndex()==otherSub2ComboBox.getSelectedIndex())||(otherSub3ComboBox.getSelectedIndex()==otherSub2ComboBox.getSelectedIndex())){
            JOptionPane.showMessageDialog(rootPane, "Please select three different courses");
        }
    }//GEN-LAST:event_otherSub2ComboBoxActionPerformed

    private void otherSub3ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherSub3ComboBoxActionPerformed
        // TODO add your handling code here:
        if((otherSub2ComboBox.getSelectedIndex()==otherSub3ComboBox.getSelectedIndex())||(otherSub1ComboBox.getSelectedIndex()==otherSub3ComboBox.getSelectedIndex())){
            JOptionPane.showMessageDialog(rootPane, "Please select three different courses");
        }
    }//GEN-LAST:event_otherSub3ComboBoxActionPerformed

    private void addOptionalSubjectsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOptionalSubjectsBtnActionPerformed
        // Add subjects in comboxes to the table
        Object[] rowData = {getOtherSub().get(otherSub1ComboBox.getSelectedIndex()).getSubjectID(),getOtherSub().get(otherSub1ComboBox.getSelectedIndex()).getSubjectName(),getOtherSub().get(otherSub1ComboBox.getSelectedIndex()).getSubjectSemester(),getOtherSub().get(otherSub1ComboBox.getSelectedIndex()).getSubjectYear(),getOtherSub().get(otherSub1ComboBox.getSelectedIndex()).getPrice()};
        dtm.addRow(rowData);
        Object[] rowData2 = {getOtherSub().get(otherSub2ComboBox.getSelectedIndex()).getSubjectID(),getOtherSub().get(otherSub2ComboBox.getSelectedIndex()).getSubjectName(),getOtherSub().get(otherSub2ComboBox.getSelectedIndex()).getSubjectSemester(),getOtherSub().get(otherSub3ComboBox.getSelectedIndex()).getSubjectYear(),getOtherSub().get(otherSub2ComboBox.getSelectedIndex()).getPrice()};
        dtm.addRow(rowData2);
        Object[] rowData3 = {getOtherSub().get(otherSub3ComboBox.getSelectedIndex()).getSubjectID(),getOtherSub().get(otherSub3ComboBox.getSelectedIndex()).getSubjectName(),getOtherSub().get(otherSub3ComboBox.getSelectedIndex()).getSubjectSemester(),getOtherSub().get(otherSub3ComboBox.getSelectedIndex()).getSubjectYear(),getOtherSub().get(otherSub3ComboBox.getSelectedIndex()).getPrice()};
        dtm.addRow(rowData3);

        //Calculate toyal payment
        double totalPayment=0;
        System.out.println(subTables.getRowCount()+","+subTables.getValueAt(0, 4));
        for(int i=0;i<subTables.getRowCount();i++){
            totalPayment+=Double.parseDouble(subTables.getValueAt(i, 4).toString());
        }

        //Set total payment
        totalPaymentLbl.setText(Double.toString(totalPayment));

        //Get registering season
        String season=eligibleJulySeason()?"July":"February";

        //Generate invoice
        String invoice="Full Name: \t"+un.getName()+"\nSeason: \t"+season+"\nSubject Details: \n\t"+
        subTables.getValueAt(0, 1)+"\t"+subTables.getValueAt(0, 4)+
        "\n\t"+subTables.getValueAt(1, 1)+"\t"+subTables.getValueAt(1, 4)+
        "\n\t"+subTables.getValueAt(2, 1)+"\t"+subTables.getValueAt(2, 4)+
        "\n\t"+subTables.getValueAt(3, 1)+"\t"+subTables.getValueAt(3, 4)+
        "\n\t"+subTables.getValueAt(4, 1)+"\t"+subTables.getValueAt(4, 4)+
        "\n\t"+subTables.getValueAt(5, 1)+"\t"+subTables.getValueAt(5, 4)+
        "\n\t"+subTables.getValueAt(6, 1)+"\t"+subTables.getValueAt(6, 4)+
        "\nTotal payment: \t"+totalPayment;

        //Email invoice to user
        try{
           Mailer.send("asithaindrajithk9@gmail.com","1995_asitha",un.getEmail(),"Invoice ID: "+un.getId(),invoice);
       }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Invalid Email address");
       }
        
    }//GEN-LAST:event_addOptionalSubjectsBtnActionPerformed
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UndergraduateCourseRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UndergraduateCourseRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CourseComboBox;
    private javax.swing.JButton addOptionalSubjectsBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JComboBox<String> otherSub1ComboBox;
    private javax.swing.JComboBox<String> otherSub2ComboBox;
    private javax.swing.JComboBox<String> otherSub3ComboBox;
    private javax.swing.JComboBox<String> selectYearComboBox;
    private javax.swing.JComboBox<String> semesterComboBox;
    private javax.swing.JTable subTables;
    private javax.swing.JLabel totalPaymentLbl;
    private javax.swing.JLabel totalPaymentLblName;
    // End of variables declaration//GEN-END:variables


}
