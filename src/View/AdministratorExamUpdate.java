/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import static Controller.ExamGradeController.insertGrade;
import static Controller.ExamGradeController.searchExamGradeByStudentIDAndSubjectID;
import static Controller.ExamGradeController.searchExamGradeBySubjectID;
import static Controller.ExamGradeController.searchExamGradesOfStudentByYearAndSemester;
import static Controller.PostgraduateController.searchPostgraduateByPostgraduateID;
import static Controller.PostgraduateController.searchPostgraduateByYear;
import static Controller.SubjectController.searchSubjectBySemesterAndYearAndDepartmentIDAndType;
import static Controller.SubjectController.searchSubjectBySubjectID;
import static Controller.UndergraduateController.searchUndergraduateByStudentID;
import static Controller.UndergraduateController.searchUndergraduateByYear;
import Model.ExamGrades;
import Model.StudentSubject;
import Model.Subject;
import static View.AdministratorHome.exm;
import static View.EnrollementSystemHome.depid;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.Mailer;
import static View.AdministratorLogin.administratorHome;



/**
 *
 * @author Asitha
 */
public class AdministratorExamUpdate extends javax.swing.JFrame {
    /**
     * Creates new form AdministratorExamController
     */
    public static ArrayList<String> list=new ArrayList<String>();
    public static ArrayList<StudentSubject> sb=new ArrayList<StudentSubject>();
    public static ExamGrades ex;
    public static Subject sbjct;
    public AdministratorExamUpdate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rsult = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        findStudentsBtn = new javax.swing.JButton();
        addResultsOfTheStudentBtn = new javax.swing.JButton();
        studentType = new javax.swing.JComboBox<>();
        yearComboBox = new javax.swing.JComboBox<>();
        semesterComboBox = new javax.swing.JComboBox<>();
        studentIDComboBox = new javax.swing.JComboBox<>();
        subjectIDComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        credit = new javax.swing.JTextField();
        grade = new javax.swing.JTextField();
        findResultsBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        closeBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        sendResultToUserBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Administrator Examination Management Panel");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel2.setText("Student ID");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel3.setText("Subject ID");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel5.setText("Result");

        rsult.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        rsult.setPreferredSize(new java.awt.Dimension(550, 50));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel6.setText("Credits");

        findStudentsBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        findStudentsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.png"))); // NOI18N
        findStudentsBtn.setText("Find Students");
        findStudentsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        findStudentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findStudentsBtnActionPerformed(evt);
            }
        });

        addResultsOfTheStudentBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        addResultsOfTheStudentBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plus3.png"))); // NOI18N
        addResultsOfTheStudentBtn.setText("Add");
        addResultsOfTheStudentBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addResultsOfTheStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResultsOfTheStudentBtnActionPerformed(evt);
            }
        });

        studentType.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        studentType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Undergraduate", "Postgraduate" }));
        studentType.setPreferredSize(new java.awt.Dimension(550, 50));

        yearComboBox.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        yearComboBox.setPreferredSize(new java.awt.Dimension(550, 50));

        semesterComboBox.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        semesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        semesterComboBox.setPreferredSize(new java.awt.Dimension(550, 50));
        semesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterComboBoxActionPerformed(evt);
            }
        });

        studentIDComboBox.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        studentIDComboBox.setPreferredSize(new java.awt.Dimension(550, 50));
        studentIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDComboBoxActionPerformed(evt);
            }
        });

        subjectIDComboBox.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        subjectIDComboBox.setPreferredSize(new java.awt.Dimension(550, 50));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel7.setText("Grade");

        credit.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        credit.setEnabled(false);
        credit.setPreferredSize(new java.awt.Dimension(550, 50));

        grade.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        grade.setEnabled(false);
        grade.setPreferredSize(new java.awt.Dimension(550, 50));

        findResultsBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        findResultsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search1.png"))); // NOI18N
        findResultsBtn.setText("Find Results");
        findResultsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        findResultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findResultsBtnActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel12.setText("Select Student Type");
        jLabel12.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel11.setText("Select Year");
        jLabel11.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel10.setText("Select Semester");
        jLabel10.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel13.setBackground(new java.awt.Color(0, 153, 153));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setOpaque(true);

        closeBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close5.png"))); // NOI18N
        closeBtn.setText("Close");
        closeBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/settings.png"))); // NOI18N
        jLabel14.setText("Examination Management Panel");
        jLabel14.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(113, 113, 113))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(grade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rsult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(studentIDComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subjectIDComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(semesterComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(findStudentsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(findResultsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studentType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addResultsOfTheStudentBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(studentType, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addComponent(findStudentsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(studentIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findResultsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rsult, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(credit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addResultsOfTheStudentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Exam Results Update", jPanel1);

        resultTable.setFont(new java.awt.Font("Ubuntu", 0, 19)); // NOI18N
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Subject ID", "Result", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(resultTable);

        sendResultToUserBtn.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        sendResultToUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mailSendBtn.png"))); // NOI18N
        sendResultToUserBtn.setText("Send Results to the user");
        sendResultToUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendResultToUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 947, Short.MAX_VALUE)
                .addComponent(sendResultToUserBtn))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1212, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 821, Short.MAX_VALUE)
                .addComponent(sendResultToUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 51, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Examination Results", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1210, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    public static String grade(String result){
    int rst=Integer.parseInt(result);
        if(rst>85){
            return "A+";
        }
        else if(rst>80){
            return "A";
        }
        else if(rst>75){
            return "A-";
        }
        else if(rst>70){
            return "B+";
        }
        else if(rst>65){
            return "B";
        }
        else if(rst>60){
            return "B-";
        }
        else if(rst>55){
            return "C+";
        }
        else if(rst>50){
            return "C";
        }
        else if(rst>45){
            return "C-";
        }
        else if(rst>40){
            return "D+";
        }
        else if(rst>35){
            return "D";
        }
        else if(rst>30){
            return "D-";
        }
        else{
            return "F";
        }
    }
    
    private void findStudentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findStudentsBtnActionPerformed
        
        if(studentType.getSelectedItem().equals("Undergraduate")){
            String yr=(String)yearComboBox.getSelectedItem();
            String sm=(String)semesterComboBox.getSelectedItem();
            try {
                list=searchUndergraduateByYear(yr);
                
                String[] slist=new String[list.size()];
                slist=list.toArray(slist);
                studentIDComboBox.setModel(new DefaultComboBoxModel<>(slist));
               
                ArrayList<Subject>sbb=searchSubjectBySemesterAndYearAndDepartmentIDAndType(yr,sm,depid,"U");
                
                String sblist[]=new String[sbb.size()];
                for(int i=0;i<sbb.size();i++){
                    sblist[i]=(String)sbb.get(i).getSubjectID();
                }
                subjectIDComboBox.setModel(new DefaultComboBoxModel<>(sblist));
                
                ArrayList<ExamGrades>l = searchExamGradeBySubjectID((String) subjectIDComboBox.getSelectedItem());
                DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
                dtm.setRowCount(0);
                for (ExamGrades lo : l) {
                    Object[] rowData = {lo.getStudentID(),lo.getResult(),lo.getGrade()};
                    dtm.addRow(rowData);
                }
            
            } catch (SQLException ex) {
                Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
            }catch(NullPointerException n){
                JOptionPane.showMessageDialog(rootPane, "No record exists");
                rsult.setText("");
                grade.setText("");
                credit.setText("");
            }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Try again later!!!");
        }
        }
        else if(studentType.getSelectedItem().equals("Postgraduate")){
            String yr=(String)yearComboBox.getSelectedItem();
            String sm=(String)semesterComboBox.getSelectedItem();
            try {
                list=searchPostgraduateByYear(yr);
                
                String[] slist=new String[list.size()];
                slist=list.toArray(slist);
                studentIDComboBox.setModel(new DefaultComboBoxModel<>(slist));
                
                ArrayList<Subject>sbb=searchSubjectBySemesterAndYearAndDepartmentIDAndType(yr,sm,depid,"P");
                
                String sblist[]=new String[sbb.size()];
                for(int i=0;i<sbb.size();i++){
                    sblist[i]=(String)sbb.get(i).getSubjectID();
                }
                subjectIDComboBox.setModel(new DefaultComboBoxModel<>(sblist));
                
                ArrayList<ExamGrades>l = searchExamGradeBySubjectID((String) subjectIDComboBox.getSelectedItem());
                DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
                dtm.setRowCount(0);
                for (ExamGrades lo : l) {
                    Object[] rowData = {lo.getStudentID(),lo.getResult(),lo.getGrade()};
                    dtm.addRow(rowData);
                }
   
            } catch (SQLException ex) {
                Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
            }catch(NullPointerException n){
                JOptionPane.showMessageDialog(rootPane, "No record exists");
                rsult.setText("");
                grade.setText("");
                credit.setText("");
            }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Try again later!!!");
        }
        }
        
    }//GEN-LAST:event_findStudentsBtnActionPerformed

    private void addResultsOfTheStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResultsOfTheStudentBtnActionPerformed
        // TODO add your handling code here:
        String stud=(String)studentIDComboBox.getSelectedItem();
        String subject=(String)subjectIDComboBox.getSelectedItem();
        String result=rsult.getText();
        grade.setText((grade(result)));
        String grd=(String)grade.getText();
        String semest=(String) semesterComboBox.getSelectedItem();
        String y=(String) yearComboBox.getSelectedItem();
        String cred=credit.getText();
        exm=new ExamGrades();
        exm.setStudentID(stud);
        exm.setSubjectID(subject);
        exm.setResult(result);
        exm.setGrade(grd);
        exm.setSemester(semest);
        exm.setYear(y);
        if(Integer.parseInt(rsult.getText())>=50){
            try {
                sbjct=searchSubjectBySubjectID(subject);
                credit.setText(sbjct.getCredits());
                exm.setCredits(credit.getText());
            } catch (SQLException ex) {
                Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            }
        else{
            exm.setCredits("0");
        }
        try {
            if(insertGrade(exm)>0){
                JOptionPane.showMessageDialog(rootPane, "Added successfully.");
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Try again later");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addResultsOfTheStudentBtnActionPerformed

    private void semesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semesterComboBoxActionPerformed

    private void findResultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findResultsBtnActionPerformed
        // TODO add your handling code here:
        String subid=(String)subjectIDComboBox.getSelectedItem();
        ex=new ExamGrades();
        try {
            ex=searchExamGradeByStudentIDAndSubjectID((String) studentIDComboBox.getSelectedItem(),subid);
            rsult.setText(ex.getResult());
            grade.setText(ex.getGrade());
            if(Integer.parseInt(rsult.getText())>=50){
                sbjct=searchSubjectBySubjectID(subid);
                credit.setText(sbjct.getCredits());
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        }catch(NullPointerException n){
            JOptionPane.showMessageDialog(rootPane, "No record exists");
        }
        
    }//GEN-LAST:event_findResultsBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
        administratorHome.setVisible(true);
        administratorHome.setLocationRelativeTo(null);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void studentIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDComboBoxActionPerformed
        try {
            // Display all results of the student with respect to year and semester in the table
            String student=(String) studentIDComboBox.getSelectedItem();
            String studentYear=(String) yearComboBox.getSelectedItem();
            String studentsemester=(String) semesterComboBox.getSelectedItem();
            
            ArrayList<ExamGrades>l=searchExamGradesOfStudentByYearAndSemester(student,studentYear,studentsemester);
            
            DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
            dtm.setRowCount(0);
            
            for (ExamGrades lo : l) {
                Object[] rowData = {lo.getStudentID(),lo.getSubjectID(),lo.getResult(),lo.getGrade()};
                dtm.addRow(rowData);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_studentIDComboBoxActionPerformed

    private void sendResultToUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendResultToUserBtnActionPerformed
        try {
            // Send results to the user's mail
            if(studentType.getSelectedIndex()==1){//Postgraduate
            
                String userId=(String) studentIDComboBox.getSelectedItem();
                String userName=searchPostgraduateByPostgraduateID(userId).getName();
                String mail=searchPostgraduateByPostgraduateID(userId).getEmail();

                System.out.println(mail);
                //Generate Results
                String results="Full Name: \t"+userName+"\nStudent ID: \t"+userId+"\nExamination Results: \n\t";

                for(int i=0;i<resultTable.getRowCount();i++){
                    results+=resultTable.getValueAt(i, 1)+"\t"+resultTable.getValueAt(i, 3)+"\n\t";
                }

                //Email invoice to user 
                Mailer.send("asithaindrajithk9@gmail.com","1995_asitha",mail,"Student ID: "+userId+" End Semester Examination Results",results); 
                
            }else{//Undergraduate
                String userId=(String) studentIDComboBox.getSelectedItem();
                String userName=searchUndergraduateByStudentID(userId).getName();
                String mail=searchUndergraduateByStudentID(userId).getEmail();

                System.out.println(mail);
                //Generate Results
                String results="Full Name: \t"+userName+"\nStudent ID: \t"+userId+"\nExamination Results: \n\t";

                for(int i=0;i<resultTable.getRowCount();i++){
                    results+=resultTable.getValueAt(i, 1)+"\t"+resultTable.getValueAt(i, 3)+"\n\t";
                }

                //Email invoice to user 
                Mailer.send("asithaindrajithk9@gmail.com","1995_asitha",mail,"Student ID: "+userId+" End Semester Examination Results",results);
            }
            
                     
        } catch (SQLException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdministratorExamUpdate.class.getName()).log(Level.SEVERE, null, ex);
        }catch (Exception e){
              JOptionPane.showMessageDialog(rootPane, "Invalid Email address");
          } 
    
    }//GEN-LAST:event_sendResultToUserBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministratorExamUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministratorExamUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministratorExamUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministratorExamUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministratorExamUpdate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addResultsOfTheStudentBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextField credit;
    private javax.swing.JButton findResultsBtn;
    private javax.swing.JButton findStudentsBtn;
    private javax.swing.JTextField grade;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable resultTable;
    private javax.swing.JTextField rsult;
    private javax.swing.JComboBox<String> semesterComboBox;
    private javax.swing.JButton sendResultToUserBtn;
    private javax.swing.JComboBox<String> studentIDComboBox;
    private javax.swing.JComboBox<String> studentType;
    private javax.swing.JComboBox<String> subjectIDComboBox;
    private javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables

    

    
}

